
trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion : 1
  minorVersion : 3
  patchVersion : 1

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.100'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.0.100'

- task: NuGetToolInstaller@1
  inputs:
    checkLatest: true

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build projects
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) -f netcoreapp3.1'

- task: DotNetCoreCLI@2
  displayName: Build projects
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) -f net5.0'

# - task: DotNetCoreCLI@2
#   displayName: Run unit tests
#   inputs:
#     command: test
#     projects: '**/*.csproj'

#- task: DotNetCoreCLI@2
#  displayName: "Create NuGet Packages"
#  inputs:
#    command: 'pack'
#    packagesToPack: '**/*.csproj;!**/*.Tests.csproj'
#    versioningScheme: 'byPrereleaseNumber'
#    majorVersion: $(majorVersion)
#    minorVersion: $(minorVersion)
#    patchVersion: $(patchVersion)

- task: CmdLine@2
  displayName: "Create NuGet Package"
  inputs:
    script: dotnet pack ./AzureEventHubAppender/AzureEventHubAppender.csproj /p:Version=$(majorVersion).$(minorVersion).$(patchVersion) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)

- task: NuGetCommand@2
  displayName: "Push NuGet package to artifact repository"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '13893109-2090-413a-87d0-9539cabbfcad/9d117720-4777-425f-a00e-9b010a51c6e2'